import React, { useState } from 'react';
import './Documentation.css';

const Documentation = ({ onClose }) => {
  const [activeSection, setActiveSection] = useState('getting-started');

  const docs = {
    'getting-started': {
      icon: 'ðŸ“š',
      title: 'Getting Started',
      content: [
        {
          title: 'Quick Start Guide',
          text: '1. Enter your API endpoint URL\n2. Select HTTP method (GET, POST, etc.)\n3. Add any required headers\n4. For POST/PUT, enter request body\n5. Click "Send Request" to test'
        },
        {
          title: 'Basic Configuration',
          text: 'Configure default settings like:\nâ€¢ Default HTTP method\nâ€¢ Common headers\nâ€¢ Response format preferences\nâ€¢ Theme selection'
        }
      ]
    },
    'features': {
      icon: 'âš¡',
      title: 'Key Features',
      content: [
        {
          title: 'API Management',
          text: 'â€¢ History tracking of all requests\nâ€¢ Favorite requests for quick access\nâ€¢ Import/Export functionality\nâ€¢ Response time monitoring'
        },
        {
          title: 'Data Handling',
          text: 'â€¢ Automatic JSON formatting\nâ€¢ Visual data representation\nâ€¢ Response headers analysis\nâ€¢ Error handling and display'
        }
      ]
    },
    'performance': {
      icon: 'ðŸ“Š',
      title: 'Performance Monitoring',
      content: [
        {
          title: 'Real-Time Metrics',
          text: 'â€¢ Response Time Tracking\nâ€¢ Error Rate Analysis\nâ€¢ Request Success Rate\nâ€¢ Performance Trends\nâ€¢ Historical Data Analysis'
        },
        {
          title: 'Performance Features',
          text: 'â€¢ Set custom performance thresholds\nâ€¢ Visual performance graphs\nâ€¢ Response time alerts\nâ€¢ Export performance data\nâ€¢ Performance optimization tips'
        }
      ]
    },
    'tips': {
      icon: 'ðŸ’¡',
      title: 'Pro Tips',
      content: [
        {
          title: 'Best Practices',
          text: 'â€¢ Use templates for common APIs\nâ€¢ Save frequently used requests\nâ€¢ Monitor response times\nâ€¢ Validate JSON before sending'
        },
        {
          title: 'Keyboard Shortcuts',
          text: 'â€¢ Ctrl + Enter: Send request\nâ€¢ Ctrl + S: Save to favorites\nâ€¢ Ctrl + H: Toggle history\nâ€¢ Esc: Close current panel'
        }
      ]
    },
    'troubleshooting': {
      icon: 'ðŸ”§',
      title: 'Troubleshooting',
      content: [
        {
          title: 'Common Issues',
          text: 'â€¢ CORS errors: Enable CORS or use a proxy\nâ€¢ Authentication: Verify your tokens/keys\nâ€¢ Timeout: Check network connection\nâ€¢ Invalid JSON: Validate syntax'
        },
        {
          title: 'Error Messages',
          text: 'â€¢ 4xx errors: Check request format\nâ€¢ 5xx errors: Server-side issues\nâ€¢ Network errors: Check connectivity\nâ€¢ Parse errors: Validate data format'
        }
      ]
    }
  };

  return (
    <div className="documentation-overlay">
      <div className="documentation">
        <div className="documentation-header">
          <h2>API Tester Documentation</h2>
          <button className="close-button" onClick={onClose}>&times;</button>
        </div>
        <div className="documentation-content">
          <div className="doc-sidebar">
            {Object.entries(docs).map(([key, section]) => (
              <button
                key={key}
                className={`doc-nav-item ${activeSection === key ? 'active' : ''}`}
                onClick={() => setActiveSection(key)}
              >
                <span className="doc-nav-icon">{section.icon}</span>
                <span className="doc-nav-text">{section.title}</span>
              </button>
            ))}
          </div>
          
          <div className="doc-content">
            <div className="doc-content-header">
              <span className="section-icon">{docs[activeSection].icon}</span>
              <h2>{docs[activeSection].title}</h2>
            </div>
            {docs[activeSection].content.map((item, index) => (
              <div key={index} className="doc-section">
                <h3>{item.title}</h3>
                <div className="doc-text">
                  {item.text.split('\n').map((text, i) => (
                    <p key={i}>{text}</p>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Documentation;